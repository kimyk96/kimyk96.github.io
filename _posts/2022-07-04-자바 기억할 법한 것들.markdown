---
layout: post
title: 자바 기억할 법한 것들
date:   2022-07-04
categories: 블로그
author: Jason YG Kim
---

{% highlight java %}
public static void main(int[] args){
  System.out.println("Hello Java World!");
}
{% endhighlight %}
자바에 대해서 간략하게 살펴보자...!

## 1. 자바의 구성 : JRE( 가상머신 , JVM ), JDK
- 자바 앱은 운영체제가 아니라 JRE 위에서 돌아간다
- 따라서 JRE만 제공된다면 어느 시스템에서나 돌아갈 수 있다.

## 2. 자바의 종류
- Java ME : micro edition 망함
- Java SE : standard edition
- Java EE : enterprise edition : 스프링한테 밀림 => 오라클에서 포기 => JakartaEE 가 됨

## 3. 자바의 역사
- Sun 에서 개발함, 2010년에 오라클에서 인수
- 오라클은 세계 최대의 database 회사
	
## 4. 빌드 도구
- 자바프로그램은 내가 작성한 코드 + 의존성(dependency)으로 구성
- 자바 프로그래머는 코딩 실력도 중요하지만 설정 능력도 중요함
- 많이 갖다 쓰는게 더 중요한듯 => 내가 치는 것보다 확장성과 안정성이 있으니깐? 
- annotation으로 사용
- 의존성을 포함해서 번역하는 것 => 빌드 build (ant, maven, gradle 같은 의존성 관리 도구들이 있다)

## 5. 메소드 오버로딩
- 함수 이름은 중복 불가능 => 매개변수가 다르다면 중복 가능 : 타입이 달라도 돼고 개수가 달라도 됌
- 유사한 기능이면 이름을 합치는 거
- 객체 생성자 같은 예시

## 6. 객체지향의 구성요소
- 캡슐화		encapsulation			클래스를 만들어라
- 정보은닉	information hiding		private으로 만들어라
- 상속		inheritance				재사용해라(근데 정작 재사용으로는 안씀)
- 다형성		polymorphism			상황에 따라 동작이 바뀌어야한다
- 다형성 세부 : 오버로딩(메서드 여러방식), 오버라이드(상위클래스 메소드를 재정의해서 사용) 

## 7. 객체지향의 설계원칙(SOLID)
1. 단일 책임 원칙 : SRP : Single Responsibility Principal
    - 클래스는 한가지 책임만을 가져야한다

2. 개방 폐쇄 원칙 : OCP : Open Closed Principal
    - 기능의 개선에 대해서는 열려있고 코드의 변경에 대해서는 닫혀있다.

3. 리스코프 치환 원칙 : LSP : Liskov Substitution Principal
    - 

## 8. 상속
